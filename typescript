Script started on Mon Mar 17 12:26:14 2025
[1m[7m%[27m[1m[0m                                                                                                                                         [0m[27m[24m[Jlap14980@LAP14980s-MacBook-Pro xv6-labs-2021 % [K[?2004hwwhith  ch script[?2004l
/usr/bin/script
[1m[7m%[27m[1m[0m                                                                                                                                         [0m[27m[24m[Jlap14980@LAP14980s-MacBook-Pro xv6-labs-2021 % [K[?2004hmman script[?2004l
[?1049h[?1h=SCRIPT(1)                                               General Commands Manual                                               SCRIPT(1)

[1mNAME[0m
     [1mscript[0m â€“ make typescript of terminal session

[1mSYNOPSIS[0m
     [1mscript[0m [[1m-aeFkqr[0m] [[1m-t[0m [4mtime[24m] [[4mfile[24m [[4mcommand[24m [4m...[24m]]
     [1mscript[0m [1m-p[0m [[1m-deq[0m] [[1m-T[0m [4mfmt[24m] [[4mfile[24m]

[1mDESCRIPTION[0m
     The [1mscript[0m utility makes a typescript of everything printed on your terminal.  It is useful for students who need a hardcopy
     record of an interactive session as proof of an assignment, as the typescript file can be printed out later with lpr(1).

     If the argument [4mfile[24m is given, [1mscript[0m saves all dialogue in [4mfile[24m.  If no file name is given, the typescript is saved in the file
     [4mtypescript[24m.

     If the argument [4mcommand[24m is given, [1mscript[0m will run the specified command with an optional argument vector instead of an interactive
     shell.

     The following options are available:

     [1m-a[0m       Append the output to [4mfile[24m or [4mtypescript[24m, retaining the prior contents.

:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KBB[K     [1m-d[0m       When playing back a session with the [1m-p[0m flag, do not sleep between records when playing back a timestamped session.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K     [1m-e[0m       Accepted for compatibility with [4mutil-linux[24m [1mscript[0m.  The child command exit status is always the exit status of [1mscript[0m.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K     [1m-F[0m       Immediately flush output after each write.  This will allow a user to create a named pipe using mkfifo(1) and another
:[K[K [KESCESC[KOO[KBB[K              user may watch the live session using a utility like cat(1).
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K     [1m-k[0m       Log keys sent to the program as well as output.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K     [1m-p[0m       Play back a session recorded with the [1m-r[0m flag in real time.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K     [1m-q[0m       Run in quiet mode, omit the start, stop and command status messages.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K     [1m-r[0m       Record a session with input, output, and timestamping.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K     [1m-t[0m [4mtime[24m  Specify the interval at which the script output file will be flushed to disk, in seconds.  A value of 0 causes [1mscript[0m to
:[K[K [KESCESC[KOO[KBB[K              flush after every character I/O event.  The default interval is 30 seconds.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K     [1m-T[0m [4mfmt[24m   Implies [1m-p[0m, but just reports the time-stamp of each output.  This is very useful for assessing the timing of events.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K              If [4mfmt[24m does not contain any â€˜%â€™ characters, it indicates the default format: â€˜%n@ %s [%Y-%m-%d %T]%nâ€™, which is useful
:[K[K [KESCESC[KOO[KBB[K              for both tools and humans to read, should be used.  Note that time-stamps will only be output when different from the
:[K[K [KESCESC[KOO[KBB[K              previous one.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K     The script ends when the forked shell (or command) exits (a [4mcontrol-D[24m to exit the Bourne shell (sh(1)), and [4mexit[24m, [4mlogout[24m or
:[K[K [KESCESC[KOO[KBB[K     [4mcontrol-D[24m (if [4mignoreeof[24m is not set) for the C-shell, csh(1)).
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K     Certain interactive commands, such as vi(1), create garbage in the typescript file.  The [1mscript[0m utility works best with commands
:[K[K [KESCESC[KOO[KBB[K     that do not manipulate the screen.  The results are meant to emulate a hardcopy terminal, not an addressable one.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K[1mENVIRONMENT[0m
:[K[K [KESCESC[KOO[KBB[K     The following environment variables are utilized by [1mscript[0m:
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K     SCRIPT  The SCRIPT environment variable is added to the sub-shell.  If SCRIPT already existed in the users environment, its value
:[K[K [KESCESC[KOO[KBB[K             is overwritten within the sub-shell.  The value of SCRIPT is the name of the [4mtypescript[24m file.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K     SHELL   If the variable SHELL exists, the shell forked by [1mscript[0m will be that shell.  If SHELL is not set, the Bourne shell is
:[K[K [KESCESC[KOO[KBB[K             assumed.  (Most shells set this variable automatically).
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K[1mEXAMPLES[0m
:[K[K [KESCESC[KOO[KBB[K     Record a simple csh(1) session with no additional details like input, output, and timestamping:
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           $ SHELL=/bin/csh script
:[K[K [KESCESC[KOO[KBB[K           Script started, output file is typescript
:[K[K [KESCESC[KOO[KBB[K           % date
:[K[K [KESCESC[KOO[KBB[K           Tue Jan  5 15:08:10 UTC 2021
:[K[K [KESCESC[KOO[KBB[K           % exit
:[K[K [KESCESC[KOO[KBB[K           exit
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           Script done, output file is typescript
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K     Now, replay the session recorded in the previous example:
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           $ cat ./typescript
:[K[K [KESCESC[KOO[KBB[K           Script started on Tue Jan  5 15:08:08 2021
:[K[K [KESCESC[KOO[KBB[K           % date
:[K[K [KESCESC[KOO[KBB[K           Tue Jan  5 15:08:10 UTC 2021
:[K[K [KESCESC[KOO[KBB[K           % exit
:[K[K [KESCESC[KOO[KBB[K           exit
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           Script done on Tue Jan  5 15:08:13 2021
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K     Record a csh(1) session, but this time with additional details like timestamping:
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           $ SHELL=/bin/csh script -r
:[K[K [KESCESC[KOO[KBB[K           Script started, output file is typescript
:[K[K [KESCESC[KOO[KBB[K           % date
:[K[K [KESCESC[KOO[KBB[K           Tue Jan  5 15:17:11 UTC 2021
:[K[K [KESCESC[KOO[KBB[K           % exit
:[K[K [KESCESC[KOO[KBB[K           exit
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           Script done, output file is typescript
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K     In order to replay a sessions recorded with the [1m-r[0m flag, it is necessary to specify [1m-p[0m (cat(1) will not work because of all the
:[K[K [KESCESC[KOO[KBB[K     aditional information stored in the session file).  Also, let us use [1m-d[0m to print the whole session at once:
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           $ script -dp ./typescript
:[K[K [KESCESC[KOO[KBB[K           Script started on Tue Jan  5 15:17:09 2021
:[K[K [KESCESC[KOO[KBB[K           % date
:[K[K [KESCESC[KOO[KBB[K           Tue Jan  5 15:17:11 UTC 2021
:[K[K [KESCESC[KOO[KBB[K           % exit
:[K[K [KESCESC[KOO[KBB[K           exit
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K           Script done on Tue Jan  5 15:17:14 2021
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K[1mSEE[0m [1mALSO[0m
:[K[K [KESCESC[KOO[KBB[K     csh(1) (for the [4mhistory[24m mechanism)
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K[1mHISTORY[0m
:[K[K[?1l>[?1049l[1m[7m%[27m[1m[0m                                                                                                                                         [0m[27m[24m[Jlap14980@LAP14980s-MacBook-Pro xv6-labs-2021 % [K[?2004hcclear[?2004l
[3J[H[2J[1m[7m%[27m[1m[0m                                                                                                                                         [0m[27m[24m[Jlap14980@LAP14980s-MacBook-Pro xv6-labs-2021 % [K[?2004h[7mmake qemu-gdb[27m[13D[27mm[27ma[27mk[27me[27m [27mq[27me[27mm[27mu[27m-[27mg[27md[27mb[?2004l
sed "s/:1234/:25501/" < .gdbinit.tmpl-riscv > .gdbinit
riscv64-unknown-elf-gcc -Wall -Werror -O -fno-omit-frame-pointer -ggdb -DSOL_UTIL -DLAB_UTIL -MD -mcmodel=medany -ffreestanding -fno-common -nostdlib -mno-relax -I. -fno-stack-protector -fno-pie -no-pie   -c -o user/sh.o user/sh.c
riscv64-unknown-elf-ld -z max-page-size=4096 -N -e main -Ttext 0 -o user/_sh user/sh.o user/ulib.o user/usys.o user/printf.o user/umalloc.o
riscv64-unknown-elf-ld: warning: user/_sh has a LOAD segment with RWX permissions
riscv64-unknown-elf-objdump -S user/_sh > user/sh.asm
riscv64-unknown-elf-objdump -t user/_sh | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > user/sh.sym
mkfs/mkfs fs.img README  user/xargstest.sh user/_cat user/_echo user/_forktest user/_grep user/_init user/_kill user/_ln user/_ls user/_mkdir user/_rm user/_sh user/_stressfs user/_usertests user/_grind user/_wc user/_zombie 
nmeta 46 (boot, super, log blocks 30 inode blocks 13, bitmap blocks 1) blocks 954 total 1000
balloc: first 539 blocks have been allocated
balloc: write bitmap block at sector 45
*** Now run 'gdb' in another window.
qemu-system-riscv64 -machine virt -bios none -kernel kernel/kernel -m 128M -smp 3 -nographic -drive file=fs.img,if=none,format=raw,id=x0 -device virtio-blk-device,drive=x0,bus=virtio-mmio-bus.0 -S -gdb tcp::25501
QEMU: Terminated
[1m[7m%[27m[1m[0m                                                                                                                                         [0m[27m[24m[Jlap14980@LAP14980s-MacBook-Pro xv6-labs-2021 % [K[?2004hcclea